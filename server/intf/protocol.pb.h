// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_INCLUDED_protocol_2eproto
#define PROTOBUF_INCLUDED_protocol_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protocol_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_protocol_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_protocol_2eproto();
namespace FileTransport {
class generalinfo_request;
class generalinfo_requestDefaultTypeInternal;
extern generalinfo_requestDefaultTypeInternal _generalinfo_request_default_instance_;
class rsponse_result;
class rsponse_resultDefaultTypeInternal;
extern rsponse_resultDefaultTypeInternal _rsponse_result_default_instance_;
class send_complete_request;
class send_complete_requestDefaultTypeInternal;
extern send_complete_requestDefaultTypeInternal _send_complete_request_default_instance_;
class send_filecontent_request;
class send_filecontent_requestDefaultTypeInternal;
extern send_filecontent_requestDefaultTypeInternal _send_filecontent_request_default_instance_;
class verify_filecontent_request;
class verify_filecontent_requestDefaultTypeInternal;
extern verify_filecontent_requestDefaultTypeInternal _verify_filecontent_request_default_instance_;
}  // namespace FileTransport
namespace google {
namespace protobuf {
template<> ::FileTransport::generalinfo_request* Arena::CreateMaybeMessage<::FileTransport::generalinfo_request>(Arena*);
template<> ::FileTransport::rsponse_result* Arena::CreateMaybeMessage<::FileTransport::rsponse_result>(Arena*);
template<> ::FileTransport::send_complete_request* Arena::CreateMaybeMessage<::FileTransport::send_complete_request>(Arena*);
template<> ::FileTransport::send_filecontent_request* Arena::CreateMaybeMessage<::FileTransport::send_filecontent_request>(Arena*);
template<> ::FileTransport::verify_filecontent_request* Arena::CreateMaybeMessage<::FileTransport::verify_filecontent_request>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace FileTransport {

// ===================================================================

class rsponse_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FileTransport.rsponse_result) */ {
 public:
  rsponse_result();
  virtual ~rsponse_result();

  rsponse_result(const rsponse_result& from);

  inline rsponse_result& operator=(const rsponse_result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  rsponse_result(rsponse_result&& from) noexcept
    : rsponse_result() {
    *this = ::std::move(from);
  }

  inline rsponse_result& operator=(rsponse_result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const rsponse_result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const rsponse_result* internal_default_instance() {
    return reinterpret_cast<const rsponse_result*>(
               &_rsponse_result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(rsponse_result* other);
  friend void swap(rsponse_result& a, rsponse_result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline rsponse_result* New() const final {
    return CreateMaybeMessage<rsponse_result>(nullptr);
  }

  rsponse_result* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<rsponse_result>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const rsponse_result& from);
  void MergeFrom(const rsponse_result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(rsponse_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FileTransport.rsponse_result)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 code_;
  friend struct ::TableStruct_protocol_2eproto;
};
// -------------------------------------------------------------------

class generalinfo_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FileTransport.generalinfo_request) */ {
 public:
  generalinfo_request();
  virtual ~generalinfo_request();

  generalinfo_request(const generalinfo_request& from);

  inline generalinfo_request& operator=(const generalinfo_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  generalinfo_request(generalinfo_request&& from) noexcept
    : generalinfo_request() {
    *this = ::std::move(from);
  }

  inline generalinfo_request& operator=(generalinfo_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const generalinfo_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const generalinfo_request* internal_default_instance() {
    return reinterpret_cast<const generalinfo_request*>(
               &_generalinfo_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(generalinfo_request* other);
  friend void swap(generalinfo_request& a, generalinfo_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline generalinfo_request* New() const final {
    return CreateMaybeMessage<generalinfo_request>(nullptr);
  }

  generalinfo_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<generalinfo_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const generalinfo_request& from);
  void MergeFrom(const generalinfo_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(generalinfo_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string fileName = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // required string md5 = 3;
  bool has_md5() const;
  void clear_md5();
  static const int kMd5FieldNumber = 3;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // required uint64 fileLength = 2;
  bool has_filelength() const;
  void clear_filelength();
  static const int kFileLengthFieldNumber = 2;
  ::google::protobuf::uint64 filelength() const;
  void set_filelength(::google::protobuf::uint64 value);

  // required uint32 pieces = 4;
  bool has_pieces() const;
  void clear_pieces();
  static const int kPiecesFieldNumber = 4;
  ::google::protobuf::uint32 pieces() const;
  void set_pieces(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FileTransport.generalinfo_request)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::uint64 filelength_;
  ::google::protobuf::uint32 pieces_;
  friend struct ::TableStruct_protocol_2eproto;
};
// -------------------------------------------------------------------

class send_filecontent_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FileTransport.send_filecontent_request) */ {
 public:
  send_filecontent_request();
  virtual ~send_filecontent_request();

  send_filecontent_request(const send_filecontent_request& from);

  inline send_filecontent_request& operator=(const send_filecontent_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  send_filecontent_request(send_filecontent_request&& from) noexcept
    : send_filecontent_request() {
    *this = ::std::move(from);
  }

  inline send_filecontent_request& operator=(send_filecontent_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const send_filecontent_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const send_filecontent_request* internal_default_instance() {
    return reinterpret_cast<const send_filecontent_request*>(
               &_send_filecontent_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(send_filecontent_request* other);
  friend void swap(send_filecontent_request& a, send_filecontent_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline send_filecontent_request* New() const final {
    return CreateMaybeMessage<send_filecontent_request>(nullptr);
  }

  send_filecontent_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<send_filecontent_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const send_filecontent_request& from);
  void MergeFrom(const send_filecontent_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(send_filecontent_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required uint32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // required uint32 pieces = 2;
  bool has_pieces() const;
  void clear_pieces();
  static const int kPiecesFieldNumber = 2;
  ::google::protobuf::uint32 pieces() const;
  void set_pieces(::google::protobuf::uint32 value);

  // required uint32 length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::uint32 length() const;
  void set_length(::google::protobuf::uint32 value);

  // required uint32 crc32 = 5;
  bool has_crc32() const;
  void clear_crc32();
  static const int kCrc32FieldNumber = 5;
  ::google::protobuf::uint32 crc32() const;
  void set_crc32(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FileTransport.send_filecontent_request)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 pieces_;
  ::google::protobuf::uint32 length_;
  ::google::protobuf::uint32 crc32_;
  friend struct ::TableStruct_protocol_2eproto;
};
// -------------------------------------------------------------------

class verify_filecontent_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FileTransport.verify_filecontent_request) */ {
 public:
  verify_filecontent_request();
  virtual ~verify_filecontent_request();

  verify_filecontent_request(const verify_filecontent_request& from);

  inline verify_filecontent_request& operator=(const verify_filecontent_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  verify_filecontent_request(verify_filecontent_request&& from) noexcept
    : verify_filecontent_request() {
    *this = ::std::move(from);
  }

  inline verify_filecontent_request& operator=(verify_filecontent_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const verify_filecontent_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const verify_filecontent_request* internal_default_instance() {
    return reinterpret_cast<const verify_filecontent_request*>(
               &_verify_filecontent_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(verify_filecontent_request* other);
  friend void swap(verify_filecontent_request& a, verify_filecontent_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline verify_filecontent_request* New() const final {
    return CreateMaybeMessage<verify_filecontent_request>(nullptr);
  }

  verify_filecontent_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<verify_filecontent_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const verify_filecontent_request& from);
  void MergeFrom(const verify_filecontent_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(verify_filecontent_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string mobile = 1;
  bool has_mobile() const;
  void clear_mobile();
  static const int kMobileFieldNumber = 1;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // required uint32 amount = 2;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::uint32 amount() const;
  void set_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FileTransport.verify_filecontent_request)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::uint32 amount_;
  friend struct ::TableStruct_protocol_2eproto;
};
// -------------------------------------------------------------------

class send_complete_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FileTransport.send_complete_request) */ {
 public:
  send_complete_request();
  virtual ~send_complete_request();

  send_complete_request(const send_complete_request& from);

  inline send_complete_request& operator=(const send_complete_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  send_complete_request(send_complete_request&& from) noexcept
    : send_complete_request() {
    *this = ::std::move(from);
  }

  inline send_complete_request& operator=(send_complete_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const send_complete_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const send_complete_request* internal_default_instance() {
    return reinterpret_cast<const send_complete_request*>(
               &_send_complete_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(send_complete_request* other);
  friend void swap(send_complete_request& a, send_complete_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline send_complete_request* New() const final {
    return CreateMaybeMessage<send_complete_request>(nullptr);
  }

  send_complete_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<send_complete_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const send_complete_request& from);
  void MergeFrom(const send_complete_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(send_complete_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:FileTransport.send_complete_request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protocol_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// rsponse_result

// required int32 code = 1;
inline bool rsponse_result::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void rsponse_result::clear_code() {
  code_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 rsponse_result::code() const {
  // @@protoc_insertion_point(field_get:FileTransport.rsponse_result.code)
  return code_;
}
inline void rsponse_result::set_code(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  code_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.rsponse_result.code)
}

// required string msg = 2;
inline bool rsponse_result::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rsponse_result::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& rsponse_result::msg() const {
  // @@protoc_insertion_point(field_get:FileTransport.rsponse_result.msg)
  return msg_.GetNoArena();
}
inline void rsponse_result::set_msg(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileTransport.rsponse_result.msg)
}
#if LANG_CXX11
inline void rsponse_result::set_msg(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileTransport.rsponse_result.msg)
}
#endif
inline void rsponse_result::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileTransport.rsponse_result.msg)
}
inline void rsponse_result::set_msg(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileTransport.rsponse_result.msg)
}
inline ::std::string* rsponse_result::mutable_msg() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:FileTransport.rsponse_result.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* rsponse_result::release_msg() {
  // @@protoc_insertion_point(field_release:FileTransport.rsponse_result.msg)
  if (!has_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rsponse_result::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:FileTransport.rsponse_result.msg)
}

// optional string data = 3;
inline bool rsponse_result::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rsponse_result::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& rsponse_result::data() const {
  // @@protoc_insertion_point(field_get:FileTransport.rsponse_result.data)
  return data_.GetNoArena();
}
inline void rsponse_result::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileTransport.rsponse_result.data)
}
#if LANG_CXX11
inline void rsponse_result::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileTransport.rsponse_result.data)
}
#endif
inline void rsponse_result::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileTransport.rsponse_result.data)
}
inline void rsponse_result::set_data(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileTransport.rsponse_result.data)
}
inline ::std::string* rsponse_result::mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:FileTransport.rsponse_result.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* rsponse_result::release_data() {
  // @@protoc_insertion_point(field_release:FileTransport.rsponse_result.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rsponse_result::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:FileTransport.rsponse_result.data)
}

// -------------------------------------------------------------------

// generalinfo_request

// required string fileName = 1;
inline bool generalinfo_request::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void generalinfo_request::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& generalinfo_request::filename() const {
  // @@protoc_insertion_point(field_get:FileTransport.generalinfo_request.fileName)
  return filename_.GetNoArena();
}
inline void generalinfo_request::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileTransport.generalinfo_request.fileName)
}
#if LANG_CXX11
inline void generalinfo_request::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileTransport.generalinfo_request.fileName)
}
#endif
inline void generalinfo_request::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileTransport.generalinfo_request.fileName)
}
inline void generalinfo_request::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileTransport.generalinfo_request.fileName)
}
inline ::std::string* generalinfo_request::mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:FileTransport.generalinfo_request.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* generalinfo_request::release_filename() {
  // @@protoc_insertion_point(field_release:FileTransport.generalinfo_request.fileName)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void generalinfo_request::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:FileTransport.generalinfo_request.fileName)
}

// required uint64 fileLength = 2;
inline bool generalinfo_request::has_filelength() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void generalinfo_request::clear_filelength() {
  filelength_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 generalinfo_request::filelength() const {
  // @@protoc_insertion_point(field_get:FileTransport.generalinfo_request.fileLength)
  return filelength_;
}
inline void generalinfo_request::set_filelength(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  filelength_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.generalinfo_request.fileLength)
}

// required string md5 = 3;
inline bool generalinfo_request::has_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void generalinfo_request::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& generalinfo_request::md5() const {
  // @@protoc_insertion_point(field_get:FileTransport.generalinfo_request.md5)
  return md5_.GetNoArena();
}
inline void generalinfo_request::set_md5(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileTransport.generalinfo_request.md5)
}
#if LANG_CXX11
inline void generalinfo_request::set_md5(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileTransport.generalinfo_request.md5)
}
#endif
inline void generalinfo_request::set_md5(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileTransport.generalinfo_request.md5)
}
inline void generalinfo_request::set_md5(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileTransport.generalinfo_request.md5)
}
inline ::std::string* generalinfo_request::mutable_md5() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:FileTransport.generalinfo_request.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* generalinfo_request::release_md5() {
  // @@protoc_insertion_point(field_release:FileTransport.generalinfo_request.md5)
  if (!has_md5()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return md5_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void generalinfo_request::set_allocated_md5(::std::string* md5) {
  if (md5 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:FileTransport.generalinfo_request.md5)
}

// required uint32 pieces = 4;
inline bool generalinfo_request::has_pieces() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void generalinfo_request::clear_pieces() {
  pieces_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 generalinfo_request::pieces() const {
  // @@protoc_insertion_point(field_get:FileTransport.generalinfo_request.pieces)
  return pieces_;
}
inline void generalinfo_request::set_pieces(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  pieces_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.generalinfo_request.pieces)
}

// -------------------------------------------------------------------

// send_filecontent_request

// required uint32 idx = 1;
inline bool send_filecontent_request::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_filecontent_request::clear_idx() {
  idx_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 send_filecontent_request::idx() const {
  // @@protoc_insertion_point(field_get:FileTransport.send_filecontent_request.idx)
  return idx_;
}
inline void send_filecontent_request::set_idx(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  idx_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.send_filecontent_request.idx)
}

// required uint32 pieces = 2;
inline bool send_filecontent_request::has_pieces() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_filecontent_request::clear_pieces() {
  pieces_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 send_filecontent_request::pieces() const {
  // @@protoc_insertion_point(field_get:FileTransport.send_filecontent_request.pieces)
  return pieces_;
}
inline void send_filecontent_request::set_pieces(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  pieces_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.send_filecontent_request.pieces)
}

// required uint32 length = 3;
inline bool send_filecontent_request::has_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_filecontent_request::clear_length() {
  length_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 send_filecontent_request::length() const {
  // @@protoc_insertion_point(field_get:FileTransport.send_filecontent_request.length)
  return length_;
}
inline void send_filecontent_request::set_length(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  length_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.send_filecontent_request.length)
}

// required bytes data = 4;
inline bool send_filecontent_request::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_filecontent_request::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& send_filecontent_request::data() const {
  // @@protoc_insertion_point(field_get:FileTransport.send_filecontent_request.data)
  return data_.GetNoArena();
}
inline void send_filecontent_request::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileTransport.send_filecontent_request.data)
}
#if LANG_CXX11
inline void send_filecontent_request::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileTransport.send_filecontent_request.data)
}
#endif
inline void send_filecontent_request::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileTransport.send_filecontent_request.data)
}
inline void send_filecontent_request::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileTransport.send_filecontent_request.data)
}
inline ::std::string* send_filecontent_request::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:FileTransport.send_filecontent_request.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_filecontent_request::release_data() {
  // @@protoc_insertion_point(field_release:FileTransport.send_filecontent_request.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_filecontent_request::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:FileTransport.send_filecontent_request.data)
}

// required uint32 crc32 = 5;
inline bool send_filecontent_request::has_crc32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void send_filecontent_request::clear_crc32() {
  crc32_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 send_filecontent_request::crc32() const {
  // @@protoc_insertion_point(field_get:FileTransport.send_filecontent_request.crc32)
  return crc32_;
}
inline void send_filecontent_request::set_crc32(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  crc32_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.send_filecontent_request.crc32)
}

// -------------------------------------------------------------------

// verify_filecontent_request

// required string mobile = 1;
inline bool verify_filecontent_request::has_mobile() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void verify_filecontent_request::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& verify_filecontent_request::mobile() const {
  // @@protoc_insertion_point(field_get:FileTransport.verify_filecontent_request.mobile)
  return mobile_.GetNoArena();
}
inline void verify_filecontent_request::set_mobile(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileTransport.verify_filecontent_request.mobile)
}
#if LANG_CXX11
inline void verify_filecontent_request::set_mobile(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileTransport.verify_filecontent_request.mobile)
}
#endif
inline void verify_filecontent_request::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileTransport.verify_filecontent_request.mobile)
}
inline void verify_filecontent_request::set_mobile(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileTransport.verify_filecontent_request.mobile)
}
inline ::std::string* verify_filecontent_request::mutable_mobile() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:FileTransport.verify_filecontent_request.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_filecontent_request::release_mobile() {
  // @@protoc_insertion_point(field_release:FileTransport.verify_filecontent_request.mobile)
  if (!has_mobile()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mobile_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_filecontent_request::set_allocated_mobile(::std::string* mobile) {
  if (mobile != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:FileTransport.verify_filecontent_request.mobile)
}

// required uint32 amount = 2;
inline bool verify_filecontent_request::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void verify_filecontent_request::clear_amount() {
  amount_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 verify_filecontent_request::amount() const {
  // @@protoc_insertion_point(field_get:FileTransport.verify_filecontent_request.amount)
  return amount_;
}
inline void verify_filecontent_request::set_amount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:FileTransport.verify_filecontent_request.amount)
}

// -------------------------------------------------------------------

// send_complete_request

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace FileTransport

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_protocol_2eproto
