// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace FileTransport {
class rsponse_resultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rsponse_result> _instance;
} _rsponse_result_default_instance_;
class generalinfo_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<generalinfo_request> _instance;
} _generalinfo_request_default_instance_;
class send_filecontent_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<send_filecontent_request> _instance;
} _send_filecontent_request_default_instance_;
class verify_filecontent_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<verify_filecontent_request> _instance;
} _verify_filecontent_request_default_instance_;
class send_complete_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<send_complete_request> _instance;
} _send_complete_request_default_instance_;
}  // namespace FileTransport
static void InitDefaultsrsponse_result_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileTransport::_rsponse_result_default_instance_;
    new (ptr) ::FileTransport::rsponse_result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileTransport::rsponse_result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rsponse_result_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrsponse_result_protocol_2eproto}, {}};

static void InitDefaultsgeneralinfo_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileTransport::_generalinfo_request_default_instance_;
    new (ptr) ::FileTransport::generalinfo_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileTransport::generalinfo_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_generalinfo_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgeneralinfo_request_protocol_2eproto}, {}};

static void InitDefaultssend_filecontent_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileTransport::_send_filecontent_request_default_instance_;
    new (ptr) ::FileTransport::send_filecontent_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileTransport::send_filecontent_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_send_filecontent_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssend_filecontent_request_protocol_2eproto}, {}};

static void InitDefaultsverify_filecontent_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileTransport::_verify_filecontent_request_default_instance_;
    new (ptr) ::FileTransport::verify_filecontent_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileTransport::verify_filecontent_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_verify_filecontent_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsverify_filecontent_request_protocol_2eproto}, {}};

static void InitDefaultssend_complete_request_protocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FileTransport::_send_complete_request_default_instance_;
    new (ptr) ::FileTransport::send_complete_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileTransport::send_complete_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_send_complete_request_protocol_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssend_complete_request_protocol_2eproto}, {}};

void InitDefaults_protocol_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_rsponse_result_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_generalinfo_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_send_filecontent_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_verify_filecontent_request_protocol_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_send_complete_request_protocol_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protocol_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_protocol_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protocol_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::FileTransport::rsponse_result, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::rsponse_result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FileTransport::rsponse_result, code_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::rsponse_result, msg_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::rsponse_result, data_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::FileTransport::generalinfo_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::generalinfo_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FileTransport::generalinfo_request, filename_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::generalinfo_request, filelength_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::generalinfo_request, md5_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::generalinfo_request, pieces_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, offset_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, pices_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, length_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, data_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_filecontent_request, crc32_),
  1,
  2,
  3,
  0,
  4,
  PROTOBUF_FIELD_OFFSET(::FileTransport::verify_filecontent_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::verify_filecontent_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FileTransport::verify_filecontent_request, mobile_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::verify_filecontent_request, amount_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_complete_request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FileTransport::send_complete_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::FileTransport::rsponse_result)},
  { 11, 20, sizeof(::FileTransport::generalinfo_request)},
  { 24, 34, sizeof(::FileTransport::send_filecontent_request)},
  { 39, 46, sizeof(::FileTransport::verify_filecontent_request)},
  { 48, 53, sizeof(::FileTransport::send_complete_request)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileTransport::_rsponse_result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileTransport::_generalinfo_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileTransport::_send_filecontent_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileTransport::_verify_filecontent_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FileTransport::_send_complete_request_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protocol_2eproto = {
  {}, AddDescriptors_protocol_2eproto, "protocol.proto", schemas,
  file_default_instances, TableStruct_protocol_2eproto::offsets,
  file_level_metadata_protocol_2eproto, 5, file_level_enum_descriptors_protocol_2eproto, file_level_service_descriptors_protocol_2eproto,
};

const char descriptor_table_protodef_protocol_2eproto[] =
  "\n\016protocol.proto\022\rFileTransport\"9\n\016rspon"
  "se_result\022\014\n\004code\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\022\014\n\004"
  "data\030\003 \001(\t\"X\n\023generalinfo_request\022\020\n\010fil"
  "eName\030\001 \002(\t\022\022\n\nfileLength\030\002 \002(\005\022\013\n\003md5\030\003"
  " \002(\t\022\016\n\006pieces\030\004 \002(\005\"f\n\030send_filecontent"
  "_request\022\016\n\006offset\030\001 \002(\005\022\r\n\005pices\030\002 \002(\005\022"
  "\016\n\006length\030\003 \002(\005\022\014\n\004data\030\004 \002(\014\022\r\n\005crc32\030\005"
  " \002(\005\"<\n\032verify_filecontent_request\022\016\n\006mo"
  "bile\030\001 \002(\t\022\016\n\006amount\030\002 \002(\005\"\027\n\025send_compl"
  "ete_request"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protocol_2eproto = {
  false, InitDefaults_protocol_2eproto, 
  descriptor_table_protodef_protocol_2eproto,
  "protocol.proto", &assign_descriptors_table_protocol_2eproto, 371,
};

void AddDescriptors_protocol_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protocol_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protocol_2eproto = []() { AddDescriptors_protocol_2eproto(); return true; }();
namespace FileTransport {

// ===================================================================

void rsponse_result::InitAsDefaultInstance() {
}
class rsponse_result::HasBitSetters {
 public:
  static void set_has_code(rsponse_result* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_msg(rsponse_result* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_data(rsponse_result* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rsponse_result::kCodeFieldNumber;
const int rsponse_result::kMsgFieldNumber;
const int rsponse_result::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rsponse_result::rsponse_result()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileTransport.rsponse_result)
}
rsponse_result::rsponse_result(const rsponse_result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:FileTransport.rsponse_result)
}

void rsponse_result::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_rsponse_result_protocol_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

rsponse_result::~rsponse_result() {
  // @@protoc_insertion_point(destructor:FileTransport.rsponse_result)
  SharedDtor();
}

void rsponse_result::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rsponse_result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const rsponse_result& rsponse_result::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_rsponse_result_protocol_2eproto.base);
  return *internal_default_instance();
}


void rsponse_result::Clear() {
// @@protoc_insertion_point(message_clear_start:FileTransport.rsponse_result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* rsponse_result::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<rsponse_result*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_code(value);
        break;
      }
      // required string msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileTransport.rsponse_result.msg");
        auto str = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileTransport.rsponse_result.data");
        auto str = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool rsponse_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileTransport.rsponse_result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FileTransport.rsponse_result.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FileTransport.rsponse_result.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileTransport.rsponse_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileTransport.rsponse_result)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void rsponse_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileTransport.rsponse_result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // required string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.rsponse_result.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.rsponse_result.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileTransport.rsponse_result)
}

::google::protobuf::uint8* rsponse_result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileTransport.rsponse_result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // required string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.rsponse_result.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.rsponse_result.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileTransport.rsponse_result)
  return target;
}

size_t rsponse_result::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:FileTransport.rsponse_result)
  size_t total_size = 0;

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_code()) {
    // required int32 code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  return total_size;
}
size_t rsponse_result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileTransport.rsponse_result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string data = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rsponse_result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileTransport.rsponse_result)
  GOOGLE_DCHECK_NE(&from, this);
  const rsponse_result* source =
      ::google::protobuf::DynamicCastToGenerated<rsponse_result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileTransport.rsponse_result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileTransport.rsponse_result)
    MergeFrom(*source);
  }
}

void rsponse_result::MergeFrom(const rsponse_result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileTransport.rsponse_result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void rsponse_result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileTransport.rsponse_result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rsponse_result::CopyFrom(const rsponse_result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileTransport.rsponse_result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rsponse_result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void rsponse_result::Swap(rsponse_result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rsponse_result::InternalSwap(rsponse_result* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata rsponse_result::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void generalinfo_request::InitAsDefaultInstance() {
}
class generalinfo_request::HasBitSetters {
 public:
  static void set_has_filename(generalinfo_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_filelength(generalinfo_request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_md5(generalinfo_request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pieces(generalinfo_request* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int generalinfo_request::kFileNameFieldNumber;
const int generalinfo_request::kFileLengthFieldNumber;
const int generalinfo_request::kMd5FieldNumber;
const int generalinfo_request::kPiecesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

generalinfo_request::generalinfo_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileTransport.generalinfo_request)
}
generalinfo_request::generalinfo_request(const generalinfo_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_md5()) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  ::memcpy(&filelength_, &from.filelength_,
    static_cast<size_t>(reinterpret_cast<char*>(&pieces_) -
    reinterpret_cast<char*>(&filelength_)) + sizeof(pieces_));
  // @@protoc_insertion_point(copy_constructor:FileTransport.generalinfo_request)
}

void generalinfo_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_generalinfo_request_protocol_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filelength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pieces_) -
      reinterpret_cast<char*>(&filelength_)) + sizeof(pieces_));
}

generalinfo_request::~generalinfo_request() {
  // @@protoc_insertion_point(destructor:FileTransport.generalinfo_request)
  SharedDtor();
}

void generalinfo_request::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void generalinfo_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const generalinfo_request& generalinfo_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_generalinfo_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void generalinfo_request::Clear() {
// @@protoc_insertion_point(message_clear_start:FileTransport.generalinfo_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      md5_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&filelength_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pieces_) -
        reinterpret_cast<char*>(&filelength_)) + sizeof(pieces_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* generalinfo_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<generalinfo_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string fileName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileTransport.generalinfo_request.fileName");
        auto str = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 fileLength = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_filelength(value);
        break;
      }
      // required string md5 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileTransport.generalinfo_request.md5");
        auto str = msg->mutable_md5();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 pieces = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_pieces(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool generalinfo_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileTransport.generalinfo_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FileTransport.generalinfo_request.fileName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 fileLength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_filelength(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string md5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->md5().data(), static_cast<int>(this->md5().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FileTransport.generalinfo_request.md5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pieces = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_pieces(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pieces_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileTransport.generalinfo_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileTransport.generalinfo_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void generalinfo_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileTransport.generalinfo_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string fileName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.generalinfo_request.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // required int32 fileLength = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->filelength(), output);
  }

  // required string md5 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.generalinfo_request.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->md5(), output);
  }

  // required int32 pieces = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pieces(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileTransport.generalinfo_request)
}

::google::protobuf::uint8* generalinfo_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileTransport.generalinfo_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string fileName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.generalinfo_request.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // required int32 fileLength = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->filelength(), target);
  }

  // required string md5 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.generalinfo_request.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->md5(), target);
  }

  // required int32 pieces = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pieces(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileTransport.generalinfo_request)
  return target;
}

size_t generalinfo_request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:FileTransport.generalinfo_request)
  size_t total_size = 0;

  if (has_filename()) {
    // required string fileName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  if (has_md5()) {
    // required string md5 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  if (has_filelength()) {
    // required int32 fileLength = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filelength());
  }

  if (has_pieces()) {
    // required int32 pieces = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pieces());
  }

  return total_size;
}
size_t generalinfo_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileTransport.generalinfo_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string fileName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());

    // required string md5 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());

    // required int32 fileLength = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filelength());

    // required int32 pieces = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pieces());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void generalinfo_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileTransport.generalinfo_request)
  GOOGLE_DCHECK_NE(&from, this);
  const generalinfo_request* source =
      ::google::protobuf::DynamicCastToGenerated<generalinfo_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileTransport.generalinfo_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileTransport.generalinfo_request)
    MergeFrom(*source);
  }
}

void generalinfo_request::MergeFrom(const generalinfo_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileTransport.generalinfo_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
    }
    if (cached_has_bits & 0x00000004u) {
      filelength_ = from.filelength_;
    }
    if (cached_has_bits & 0x00000008u) {
      pieces_ = from.pieces_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void generalinfo_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileTransport.generalinfo_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void generalinfo_request::CopyFrom(const generalinfo_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileTransport.generalinfo_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool generalinfo_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void generalinfo_request::Swap(generalinfo_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void generalinfo_request::InternalSwap(generalinfo_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  md5_.Swap(&other->md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filelength_, other->filelength_);
  swap(pieces_, other->pieces_);
}

::google::protobuf::Metadata generalinfo_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void send_filecontent_request::InitAsDefaultInstance() {
}
class send_filecontent_request::HasBitSetters {
 public:
  static void set_has_offset(send_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pices(send_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_length(send_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_data(send_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_crc32(send_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int send_filecontent_request::kOffsetFieldNumber;
const int send_filecontent_request::kPicesFieldNumber;
const int send_filecontent_request::kLengthFieldNumber;
const int send_filecontent_request::kDataFieldNumber;
const int send_filecontent_request::kCrc32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

send_filecontent_request::send_filecontent_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileTransport.send_filecontent_request)
}
send_filecontent_request::send_filecontent_request(const send_filecontent_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc32_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(crc32_));
  // @@protoc_insertion_point(copy_constructor:FileTransport.send_filecontent_request)
}

void send_filecontent_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_send_filecontent_request_protocol_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc32_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(crc32_));
}

send_filecontent_request::~send_filecontent_request() {
  // @@protoc_insertion_point(destructor:FileTransport.send_filecontent_request)
  SharedDtor();
}

void send_filecontent_request::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void send_filecontent_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const send_filecontent_request& send_filecontent_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_send_filecontent_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void send_filecontent_request::Clear() {
// @@protoc_insertion_point(message_clear_start:FileTransport.send_filecontent_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&crc32_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(crc32_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* send_filecontent_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<send_filecontent_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 offset = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_offset(value);
        break;
      }
      // required int32 pices = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_pices(value);
        break;
      }
      // required int32 length = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_length(value);
        break;
      }
      // required bytes data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        auto str = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 crc32 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_crc32(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool send_filecontent_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileTransport.send_filecontent_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pices(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pices_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_length(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 crc32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_crc32(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crc32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileTransport.send_filecontent_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileTransport.send_filecontent_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void send_filecontent_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileTransport.send_filecontent_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 offset = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->offset(), output);
  }

  // required int32 pices = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pices(), output);
  }

  // required int32 length = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->length(), output);
  }

  // required bytes data = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // required int32 crc32 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->crc32(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileTransport.send_filecontent_request)
}

::google::protobuf::uint8* send_filecontent_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileTransport.send_filecontent_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 offset = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->offset(), target);
  }

  // required int32 pices = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pices(), target);
  }

  // required int32 length = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->length(), target);
  }

  // required bytes data = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // required int32 crc32 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->crc32(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileTransport.send_filecontent_request)
  return target;
}

size_t send_filecontent_request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:FileTransport.send_filecontent_request)
  size_t total_size = 0;

  if (has_data()) {
    // required bytes data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (has_offset()) {
    // required int32 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  if (has_pices()) {
    // required int32 pices = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pices());
  }

  if (has_length()) {
    // required int32 length = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  if (has_crc32()) {
    // required int32 crc32 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->crc32());
  }

  return total_size;
}
size_t send_filecontent_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileTransport.send_filecontent_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

    // required int32 offset = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());

    // required int32 pices = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pices());

    // required int32 length = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());

    // required int32 crc32 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->crc32());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void send_filecontent_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileTransport.send_filecontent_request)
  GOOGLE_DCHECK_NE(&from, this);
  const send_filecontent_request* source =
      ::google::protobuf::DynamicCastToGenerated<send_filecontent_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileTransport.send_filecontent_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileTransport.send_filecontent_request)
    MergeFrom(*source);
  }
}

void send_filecontent_request::MergeFrom(const send_filecontent_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileTransport.send_filecontent_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      pices_ = from.pices_;
    }
    if (cached_has_bits & 0x00000008u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000010u) {
      crc32_ = from.crc32_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void send_filecontent_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileTransport.send_filecontent_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_filecontent_request::CopyFrom(const send_filecontent_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileTransport.send_filecontent_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_filecontent_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void send_filecontent_request::Swap(send_filecontent_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void send_filecontent_request::InternalSwap(send_filecontent_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(pices_, other->pices_);
  swap(length_, other->length_);
  swap(crc32_, other->crc32_);
}

::google::protobuf::Metadata send_filecontent_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void verify_filecontent_request::InitAsDefaultInstance() {
}
class verify_filecontent_request::HasBitSetters {
 public:
  static void set_has_mobile(verify_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_amount(verify_filecontent_request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int verify_filecontent_request::kMobileFieldNumber;
const int verify_filecontent_request::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

verify_filecontent_request::verify_filecontent_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileTransport.verify_filecontent_request)
}
verify_filecontent_request::verify_filecontent_request(const verify_filecontent_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:FileTransport.verify_filecontent_request)
}

void verify_filecontent_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_verify_filecontent_request_protocol_2eproto.base);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
}

verify_filecontent_request::~verify_filecontent_request() {
  // @@protoc_insertion_point(destructor:FileTransport.verify_filecontent_request)
  SharedDtor();
}

void verify_filecontent_request::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void verify_filecontent_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const verify_filecontent_request& verify_filecontent_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_verify_filecontent_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void verify_filecontent_request::Clear() {
// @@protoc_insertion_point(message_clear_start:FileTransport.verify_filecontent_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mobile_.ClearNonDefaultToEmptyNoArena();
  }
  amount_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* verify_filecontent_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<verify_filecontent_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string mobile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileTransport.verify_filecontent_request.mobile");
        auto str = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 amount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_amount(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool verify_filecontent_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileTransport.verify_filecontent_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FileTransport.verify_filecontent_request.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileTransport.verify_filecontent_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileTransport.verify_filecontent_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void verify_filecontent_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileTransport.verify_filecontent_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.verify_filecontent_request.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  // required int32 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileTransport.verify_filecontent_request)
}

::google::protobuf::uint8* verify_filecontent_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileTransport.verify_filecontent_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mobile = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FileTransport.verify_filecontent_request.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  // required int32 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileTransport.verify_filecontent_request)
  return target;
}

size_t verify_filecontent_request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:FileTransport.verify_filecontent_request)
  size_t total_size = 0;

  if (has_mobile()) {
    // required string mobile = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  if (has_amount()) {
    // required int32 amount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  return total_size;
}
size_t verify_filecontent_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileTransport.verify_filecontent_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string mobile = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());

    // required int32 amount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void verify_filecontent_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileTransport.verify_filecontent_request)
  GOOGLE_DCHECK_NE(&from, this);
  const verify_filecontent_request* source =
      ::google::protobuf::DynamicCastToGenerated<verify_filecontent_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileTransport.verify_filecontent_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileTransport.verify_filecontent_request)
    MergeFrom(*source);
  }
}

void verify_filecontent_request::MergeFrom(const verify_filecontent_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileTransport.verify_filecontent_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void verify_filecontent_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileTransport.verify_filecontent_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void verify_filecontent_request::CopyFrom(const verify_filecontent_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileTransport.verify_filecontent_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool verify_filecontent_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void verify_filecontent_request::Swap(verify_filecontent_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void verify_filecontent_request::InternalSwap(verify_filecontent_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
}

::google::protobuf::Metadata verify_filecontent_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// ===================================================================

void send_complete_request::InitAsDefaultInstance() {
}
class send_complete_request::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

send_complete_request::send_complete_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileTransport.send_complete_request)
}
send_complete_request::send_complete_request(const send_complete_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FileTransport.send_complete_request)
}

void send_complete_request::SharedCtor() {
}

send_complete_request::~send_complete_request() {
  // @@protoc_insertion_point(destructor:FileTransport.send_complete_request)
  SharedDtor();
}

void send_complete_request::SharedDtor() {
}

void send_complete_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const send_complete_request& send_complete_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_send_complete_request_protocol_2eproto.base);
  return *internal_default_instance();
}


void send_complete_request::Clear() {
// @@protoc_insertion_point(message_clear_start:FileTransport.send_complete_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* send_complete_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<send_complete_request*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool send_complete_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileTransport.send_complete_request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:FileTransport.send_complete_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileTransport.send_complete_request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void send_complete_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileTransport.send_complete_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileTransport.send_complete_request)
}

::google::protobuf::uint8* send_complete_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FileTransport.send_complete_request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileTransport.send_complete_request)
  return target;
}

size_t send_complete_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileTransport.send_complete_request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void send_complete_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileTransport.send_complete_request)
  GOOGLE_DCHECK_NE(&from, this);
  const send_complete_request* source =
      ::google::protobuf::DynamicCastToGenerated<send_complete_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileTransport.send_complete_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileTransport.send_complete_request)
    MergeFrom(*source);
  }
}

void send_complete_request::MergeFrom(const send_complete_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileTransport.send_complete_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void send_complete_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileTransport.send_complete_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_complete_request::CopyFrom(const send_complete_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileTransport.send_complete_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_complete_request::IsInitialized() const {
  return true;
}

void send_complete_request::Swap(send_complete_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void send_complete_request::InternalSwap(send_complete_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata send_complete_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protocol_2eproto);
  return ::file_level_metadata_protocol_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FileTransport
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::FileTransport::rsponse_result* Arena::CreateMaybeMessage< ::FileTransport::rsponse_result >(Arena* arena) {
  return Arena::CreateInternal< ::FileTransport::rsponse_result >(arena);
}
template<> PROTOBUF_NOINLINE ::FileTransport::generalinfo_request* Arena::CreateMaybeMessage< ::FileTransport::generalinfo_request >(Arena* arena) {
  return Arena::CreateInternal< ::FileTransport::generalinfo_request >(arena);
}
template<> PROTOBUF_NOINLINE ::FileTransport::send_filecontent_request* Arena::CreateMaybeMessage< ::FileTransport::send_filecontent_request >(Arena* arena) {
  return Arena::CreateInternal< ::FileTransport::send_filecontent_request >(arena);
}
template<> PROTOBUF_NOINLINE ::FileTransport::verify_filecontent_request* Arena::CreateMaybeMessage< ::FileTransport::verify_filecontent_request >(Arena* arena) {
  return Arena::CreateInternal< ::FileTransport::verify_filecontent_request >(arena);
}
template<> PROTOBUF_NOINLINE ::FileTransport::send_complete_request* Arena::CreateMaybeMessage< ::FileTransport::send_complete_request >(Arena* arena) {
  return Arena::CreateInternal< ::FileTransport::send_complete_request >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
